import{j as m}from"./jsx-runtime-OAISXtky.js";import{F as b}from"./FormGroupWithLabel-D8mMHxtJ.js";import"./index-qVDZzPEr.js";import"./HelpText-DdXOOL8t.js";function v(e){const{onTextChange:n,...o}=e;return{onTextChange:n,inputAttributes:o}}function r(e){const{onTextChange:n,inputAttributes:o}=v(e),f=g=>{n(g.target.value)};return m.jsx("input",{onChange:f,...o,className:e.className??"form-control",type:e.type??"text"})}const u=b(r);try{r.displayName="BootstrapFormInput",r.__docgenInfo={description:"",displayName:"BootstrapFormInput",props:{label:{defaultValue:null,description:"the content of the label that will appear with the element",name:"label",required:!0,type:{name:"ReactNode | ReactNode[]"}},helpText:{defaultValue:null,description:"if present, this content will appear below the input",name:"helpText",required:!1,type:{name:"ReactNode | ReactNode[]"}},wrapperDivClassName:{defaultValue:null,description:"the class name to apply to the wrapper div; will use 'mb-3' if not specified",name:"wrapperDivClassName",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"the class name to apply to the label element; will use 'form-label' if not specified",name:"labelClassName",required:!1,type:{name:"string | undefined"}},invalidFeedback:{defaultValue:null,description:`if present, the invalid field feedback that will render with the element.  Typically
for Bootstrap form controls, the form element must have 'is-invalid' in its class name
for this to appear.`,name:"invalidFeedback",required:!1,type:{name:"ReactNode | ReactNode[]"}},onTextChange:{defaultValue:null,description:`if present, this will be called each time the text content of the input changes.  It's an
easier alternative to onChange that avoids having to deal with DOM events.`,name:"onTextChange",required:!0,type:{name:"(text: string) => void"}}}}}catch{}const w={title:"Forms/BootstrapFormInput",component:u,argTypes:{label:{control:"text"},hideLabel:{control:"boolean"},helpText:{control:"text"},invalidFeedback:{control:"text"}},parameters:{docs:{description:{component:"An `<input>` tag and a matching `<label>`, styled for Bootstrap.  All normal\n          properties of `<input>` except `onChange` are supported, so you can pass `value={...}`,\n          `className={...}`, etc.  To listen for changes, use `onTextChange`."}}}},h=e=>m.jsx(u,{...e}),t=h.bind({});t.args={label:"First name"};const a=h.bind({});a.args={label:"Email address",type:"email",value:"not-valid@@gmail.com",className:"form-control is-invalid",invalidFeedback:"Please enter a valid email address."};var s,l,i;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:"args => <BootstrapFormInput {...args} />",...(i=(l=t.parameters)==null?void 0:l.docs)==null?void 0:i.source}}};var p,c,d;a.parameters={...a.parameters,docs:{...(p=a.parameters)==null?void 0:p.docs,source:{originalSource:"args => <BootstrapFormInput {...args} />",...(d=(c=a.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};const C=["Basic","Invalid"];export{t as Basic,a as Invalid,C as __namedExportsOrder,w as default};
