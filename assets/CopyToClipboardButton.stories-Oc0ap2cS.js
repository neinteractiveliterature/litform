import{j as m}from"./jsx-runtime-OAISXtky.js";import{g as v,r as x}from"./index-qVDZzPEr.js";var w=function(){var t=document.getSelection();if(!t.rangeCount)return function(){};for(var e=document.activeElement,o=[],n=0;n<t.rangeCount;n++)o.push(t.getRangeAt(n));switch(e.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":e.blur();break;default:e=null;break}return t.removeAllRanges(),function(){t.type==="Caret"&&t.removeAllRanges(),t.rangeCount||o.forEach(function(s){t.addRange(s)}),e&&e.focus()}},T=w,y={"text/plain":"Text","text/html":"Url",default:"Text"},h="Copy to clipboard: #{key}, Enter";function D(t){var e=(/mac os x/i.test(navigator.userAgent)?"âŒ˜":"Ctrl")+"+C";return t.replace(/#{\s*key\s*}/g,e)}function E(t,e){var o,n,s,i,c,a,l=!1;e||(e={}),o=e.debug||!1;try{s=T(),i=document.createRange(),c=document.getSelection(),a=document.createElement("span"),a.textContent=t,a.ariaHidden="true",a.style.all="unset",a.style.position="fixed",a.style.top=0,a.style.clip="rect(0, 0, 0, 0)",a.style.whiteSpace="pre",a.style.webkitUserSelect="text",a.style.MozUserSelect="text",a.style.msUserSelect="text",a.style.userSelect="text",a.addEventListener("copy",function(r){if(r.stopPropagation(),e.format)if(r.preventDefault(),typeof r.clipboardData>"u"){o&&console.warn("unable to use e.clipboardData"),o&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var f=y[e.format]||y.default;window.clipboardData.setData(f,t)}else r.clipboardData.clearData(),r.clipboardData.setData(e.format,t);e.onCopy&&(r.preventDefault(),e.onCopy(r.clipboardData))}),document.body.appendChild(a),i.selectNodeContents(a),c.addRange(i);var p=document.execCommand("copy");if(!p)throw new Error("copy command was unsuccessful");l=!0}catch(r){o&&console.error("unable to copy using execCommand: ",r),o&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(e.format||"text",t),e.onCopy&&e.onCopy(window.clipboardData),l=!0}catch(f){o&&console.error("unable to copy using clipboardData: ",f),o&&console.error("falling back to prompt"),n=D("message"in e?e.message:h),window.prompt(n,t)}}finally{c&&(typeof c.removeRange=="function"?c.removeRange(i):c.removeAllRanges()),a&&document.body.removeChild(a),s()}return l}var R=E;const S=v(R),N={copy:"bi-clipboard","question-circle":"bi-question-circle-fill",spinner:"spinner-border",search:"bi-search"},B={"bootstrap-icons":N};function _(t,e){return B[e??"bootstrap-icons"][t]}function u({text:t,format:e,copiedProps:o,defaultText:n,copiedText:s,iconSet:i,...c}){const[a,l]=x.useState(!1),p=()=>{a||(l(!0),window.setTimeout(()=>{l(!1)},2e3))},r=()=>{S(t,{format:e})&&p()};return m.jsxs("button",{...c,...a?o||{}:{},onClick:r,children:[m.jsx("i",{className:_("copy",i)})," ",a?s||"Copied!":n||"Copy to clipboard"]})}try{u.displayName="CopyToClipboardButton",u.__docgenInfo={description:"",displayName:"CopyToClipboardButton",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"string | undefined"}},copiedProps:{defaultValue:null,description:"",name:"copiedProps",required:!1,type:{name:"HTMLAttributes<HTMLButtonElement> | undefined"}},defaultText:{defaultValue:null,description:"",name:"defaultText",required:!1,type:{name:"ReactNode | ReactNode[]"}},copiedText:{defaultValue:null,description:"",name:"copiedText",required:!1,type:{name:"ReactNode | ReactNode[]"}},iconSet:{defaultValue:null,description:"",name:"iconSet",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bootstrap-icons"'}]}}}}}catch{}const I={title:"Buttons/CopyToClipboardButton",component:u,argTypes:{},parameters:{docs:{description:{component:'A `<button>` tag which, when clicked, will copy some specified text to the\n        user\'s clipboard, and then display a message (by default, "Copied!").'}}}},k=t=>m.jsx(u,{...t}),d=k.bind({});d.args={text:"This is the text copied to the clipboard by the button.",className:"btn btn-secondary"};var b,g,C;d.parameters={...d.parameters,docs:{...(b=d.parameters)==null?void 0:b.docs,source:{originalSource:"args => <CopyToClipboardButton {...args} />",...(C=(g=d.parameters)==null?void 0:g.docs)==null?void 0:C.source}}};const j=["Basic"];export{d as Basic,j as __namedExportsOrder,I as default};
