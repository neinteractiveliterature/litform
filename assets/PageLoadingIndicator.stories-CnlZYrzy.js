import{j as o}from"./jsx-runtime-Cf8x2fCZ.js";import{r as n}from"./index-DbAYB8d_.js";import"./index-yBjzXJbu.js";function t({visible:e}){const[i,r]=n.useState(!1);return n.useEffect(()=>{e||r(!1);const l=setTimeout(()=>r(e),250);return()=>clearTimeout(l)},[e]),o.jsxs("div",{className:"text-center mt-5 custom-loading-indicator",style:{opacity:i?1:0,visibility:i?"visible":"hidden"},children:[o.jsx("div",{className:"spinner-border",role:"status"}),o.jsx("span",{className:"visually-hidden",children:"Loading..."})]})}try{t.displayName="PageLoadingIndicator",t.__docgenInfo={description:"",displayName:"PageLoadingIndicator",props:{visible:{defaultValue:null,description:"",name:"visible",required:!0,type:{name:"boolean"}},iconSet:{defaultValue:null,description:"@deprecated",name:"iconSet",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"bootstrap-icons"'}]}}}}}catch{}const f={title:"Loading/PageLoadingIndicator",component:t,argTypes:{visible:{control:"boolean"},iconSet:{control:"radio",options:["bootstrap-icons"]}},parameters:{docs:{description:{component:"A larger loading indicator that can fade in and out."}}}},p=e=>o.jsx(t,{...e}),a=p.bind({});a.args={visible:!0};var s,d,c;a.parameters={...a.parameters,docs:{...(s=a.parameters)==null?void 0:s.docs,source:{originalSource:"args => <PageLoadingIndicator {...args} />",...(c=(d=a.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};const y=["Basic"];export{a as Basic,y as __namedExportsOrder,f as default};
