import{j as l}from"./jsx-runtime-Cf8x2fCZ.js";import{r as c}from"./index-DbAYB8d_.js";import{H as m}from"./HelpText-ZNBmkEjG.js";function p(e){const{label:a,helpText:r,wrapperDivClassName:i,labelClassName:n,invalidFeedback:t,...o}=e;return[{label:a,helpText:r,wrapperDivClassName:i,labelClassName:n,invalidFeedback:t},o]}function s({children:e,label:a,helpText:r,wrapperDivClassName:i,labelClassName:n,invalidFeedback:t}){const o=c.useId();return l.jsxs("div",{className:i??"mb-3",children:[l.jsx("label",{htmlFor:o,className:n??"form-label",children:a}),e(o),l.jsx(m,{children:r}),t&&l.jsx("div",{className:"invalid-feedback",children:t})]})}function d(e){const a=r=>{const[i,n]=p(r);return l.jsx(s,{...i,children:t=>l.jsx(e,{...n,id:t})})};return a.displayName=`FormGroupWithLabelWrapper<${e.displayName??"UnknownInputComponent"}>`,a}try{p.displayName="extractFormGroupWithLabelProps",p.__docgenInfo={description:"",displayName:"extractFormGroupWithLabelProps",props:{label:{defaultValue:null,description:"the content of the label that will appear with the element",name:"label",required:!0,type:{name:"ReactNode | ReactNode[]"}},helpText:{defaultValue:null,description:"if present, this content will appear below the input",name:"helpText",required:!1,type:{name:"ReactNode | ReactNode[]"}},wrapperDivClassName:{defaultValue:null,description:"the class name to apply to the wrapper div; will use 'mb-3' if not specified",name:"wrapperDivClassName",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"the class name to apply to the label element; will use 'form-label' if not specified",name:"labelClassName",required:!1,type:{name:"string | undefined"}},invalidFeedback:{defaultValue:null,description:`if present, the invalid field feedback that will render with the element.  Typically
for Bootstrap form controls, the form element must have 'is-invalid' in its class name
for this to appear.`,name:"invalidFeedback",required:!1,type:{name:"ReactNode | ReactNode[]"}}}}}catch{}try{d.displayName="FormGroupWithLabelWrapper",d.__docgenInfo={description:"",displayName:"FormGroupWithLabelWrapper",props:{}}}catch{}try{s.displayName="FormGroupWithLabel",s.__docgenInfo={description:"",displayName:"FormGroupWithLabel",props:{children:{defaultValue:null,description:`a render function that takes a generated input ID, which you should use as the id of
the input you render in this function`,name:"children",required:!0,type:{name:"(id: string) => ReactNode"}},label:{defaultValue:null,description:"the content of the label that will appear with the element",name:"label",required:!0,type:{name:"ReactNode | ReactNode[]"}},helpText:{defaultValue:null,description:"if present, this content will appear below the input",name:"helpText",required:!1,type:{name:"ReactNode | ReactNode[]"}},wrapperDivClassName:{defaultValue:null,description:"the class name to apply to the wrapper div; will use 'mb-3' if not specified",name:"wrapperDivClassName",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"the class name to apply to the label element; will use 'form-label' if not specified",name:"labelClassName",required:!1,type:{name:"string | undefined"}},invalidFeedback:{defaultValue:null,description:`if present, the invalid field feedback that will render with the element.  Typically
for Bootstrap form controls, the form element must have 'is-invalid' in its class name
for this to appear.`,name:"invalidFeedback",required:!1,type:{name:"ReactNode | ReactNode[]"}}}}}catch{}export{d as F};
